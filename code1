import pyglet
from pyglet import shapes
from pyglet.window import mouse
from pyglet.window import key

window = pyglet.window.Window(1100, 640)
batch = pyglet.graphics.Batch()
batch2 = pyglet.graphics.Batch()
batch3 = pyglet.graphics.Batch()

plugboard = pyglet.window.Window(width=1100, height=500, visible=False)
loc = window.get_location()
size= window.get_size()
plugboard.set_location(loc[0],loc[1]+80)
plugboard.set_size(size[0], size[1]-80)




class Key():
    def __init__(self, x, y, letter):
        self.x = x
        self.y = y
        self.letter=str(letter)

    def shape(self):
        return shapes.Arc(self.x,self.y,radius=40, color=(255,255,255) , batch=batch), \
               pyglet.text.Label(self.letter, font_name='Times New Roman', font_size=32, x=self.x, y=self.y+3, anchor_x="center", anchor_y="center", batch=batch)



TopRow = 350
QArc = Key.shape(Key(100,TopRow, 'Q'))
WArc = Key.shape(Key(200,TopRow, 'W'))
EArc = Key.shape(Key(300,TopRow, 'E'))
RArc = Key.shape(Key(400,TopRow, 'R'))
TArc = Key.shape(Key(500,TopRow, 'T'))
YArc = Key.shape(Key(600,TopRow, 'Y'))
UArc = Key.shape(Key(700,TopRow, 'U'))
IArc = Key.shape(Key(800,TopRow, 'I'))
OArc = Key.shape(Key(900,TopRow, 'O'))
PArc = Key.shape(Key(1000,TopRow, 'P'))

####
MidRow = 250
AArc = Key.shape(Key(150,MidRow, 'A'))
SArc = Key.shape(Key(250,MidRow, 'S'))
DArc = Key.shape(Key(350,MidRow, 'D'))
FArc = Key.shape(Key(450,MidRow, 'F'))
GArc = Key.shape(Key(550,MidRow, 'G'))
HArc = Key.shape(Key(650,MidRow, 'H'))
JArc = Key.shape(Key(750,MidRow, 'J'))
KArc = Key.shape(Key(850,MidRow, 'K'))
LArc = Key.shape(Key(950,MidRow, 'L'))


####
BotRow = 150
ZArc = Key.shape(Key(250,BotRow, 'Z'))
XArc = Key.shape(Key(350,BotRow, 'X'))
CArc = Key.shape(Key(450,BotRow, 'C'))
VArc = Key.shape(Key(550,BotRow, 'V'))
BArc = Key.shape(Key(650,BotRow, 'B'))
NArc = Key.shape(Key(750,BotRow, 'N'))
MArc = Key.shape(Key(850,BotRow, 'M'))



Plugboard = pyglet.text.Label('Plugboard', font_name='Times New Roman', font_size=38,
                              x=550, y=40, anchor_x="center", anchor_y="center", batch=batch)




class PBW(pyglet.window.Window):
    pass



            
    
class PB():
    def __init__(self, x, y, letter):
        self.x = x
        self.y = y
        self.letter=str(letter)

    def shape(self):
        return shapes.Circle(self.x,self.y,radius=15, color=(255,255,255) , batch=batch2), \
               pyglet.text.Label(self.letter, font_name='Times New Roman', font_size=24, x=self.x, y=self.y-37, bold=False, anchor_x="center", anchor_y="center", batch=batch2)


TopRowPB = 350
QPBCircle = PB.shape(PB(100,TopRowPB, 'Q'))
WPBCircle = PB.shape(PB(200,TopRowPB, 'W'))
EPBCircle = PB.shape(PB(300,TopRowPB, 'E'))
RPBCircle = PB.shape(PB(400,TopRowPB, 'R'))
TPBCircle = PB.shape(PB(500,TopRowPB, 'T'))
YPBCircle = PB.shape(PB(600,TopRowPB, 'Y'))
UPBCircle = PB.shape(PB(700,TopRowPB, 'U'))
IPBCircle = PB.shape(PB(800,TopRowPB, 'I'))
OPBCircle = PB.shape(PB(900,TopRowPB, 'O'))
PPBCircle = PB.shape(PB(1000,TopRowPB, 'P'))

MidRowPB = 250
APBCircle = PB.shape(PB(150,MidRowPB, 'A'))
SPBCircle = PB.shape(PB(250,MidRowPB, 'S'))
DPBCircle = PB.shape(PB(350,MidRowPB, 'D'))
FPBCircle = PB.shape(PB(450,MidRowPB, 'F'))
GPBCircle = PB.shape(PB(550,MidRowPB, 'G'))
HPBCircle = PB.shape(PB(650,MidRowPB, 'H'))
JPBCircle = PB.shape(PB(750,MidRowPB, 'J'))
KPBCircle = PB.shape(PB(850,MidRowPB, 'K'))
LPBCircle = PB.shape(PB(950,MidRowPB, 'L'))

BotRowPB = 150
ZPBCircle = PB.shape(PB(250,BotRowPB, 'Z'))
XPBCircle = PB.shape(PB(350,BotRowPB, 'X'))
CPBCircle = PB.shape(PB(450,BotRowPB, 'C'))
VPBCircle = PB.shape(PB(550,BotRowPB, 'V'))
BPBCircle = PB.shape(PB(650,BotRowPB, 'B'))
NPBCircle = PB.shape(PB(750,BotRowPB, 'N'))
MPBCircle = PB.shape(PB(850,BotRowPB, 'M'))

    


    




@window.event
def on_draw():
    window.clear()  
    plugboard.clear()
    #label.draw()
    batch.draw()
    

@plugboard.event
def on_draw():
    plugboard.clear
    batch2.draw()

@window.event
def on_key_press(symbol, modifiers):
    #if symbol == key.Q:
    QCircle = shapes.Circle(x=100, y=350, radius=40, color=(255, 255, 0), batch=batch)
    on_draw()
    print(key.Q)


@window.event
def on_mouse_press(x, y, button, modifiers):
    pass

@plugboard.event
def on_mouse_leave(x,y):
    plugboard.set_visible(False)
    
    
@window.event
def on_mouse_press(x, y, button, modifiers):
    if y<90:
        #plugboard.set_visible(False)
        plugboard.clear()
        plugboard.switch_to()
        
        plugboard.set_visible(True)
        
    




    
pyglet.app.run()
